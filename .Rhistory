## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
mdata
dim(data)
dim(mdata)
## train / test data for 'age' variable
train = data[data[,"age"]!="?",]
test = data[data[,"age"]=="?",]
dim(train); dim(test)
## missing data
mis.mat = NULL
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
dim(mis.mat); sum(data=="?")
## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
dim(mdata)
data[data[,"age"]=="?",]
## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
dim(mdata)
## train / test data for 'age' variable
train = data[data[,"age"]!="?",]
test = data[data[,"age"]=="?",]
dim(train); dim(test)
names(train)
## train / test data for 'age' variable
train = data[data[,"age"]!="?",]
test = data[data[,"age"]=="?",]
dim(train); dim(test)
train_age = train$age
test_age = test$age
## missing data : age
result = numeric()
k = 5:25
for(i in k){
pre = knn(train, test, train_age, k=i)
tab = table(pre, test_age)
result[i-4] = (tab[1,1]+tab[2,2])/sum(tab)
}
## missing data : age
install.packages(â€˜classâ€™)
## missing data : age
install.packages("class")
## missing data : age
# install.packages("class")
library(class)
result = numeric()
k = 5:25
for(i in k){
pre = knn(train, test, train_age, k=i)
tab = table(pre, test_age)
result[i-4] = (tab[1,1]+tab[2,2])/sum(tab)
}
train
str(data)
data$ticket
as.factor(data$ticket)
data$ticket = as.factor(data$ticket)
level(data$ticket)
levels(data$ticket)
levels(data$ticket) = c(1:703)
data$ticket
str(data)
data$ticket = as.factor(data$ticket)
levels(data$ticket) = c(1:703)
str(data)
data$pclass = as.factor(data$pclass)
data$pclass
data$sex = as.factor(data$sex)
data$sex
levels(data$sex) = 1:2
str(data)
data$age = as.numeric(data$age)
data$age
str(data)
data$parch = as.factor(data$parch)
data$sibsp = as.factor(data$sibsp)
data$fare = as.factor(data$fare)
data$fare
data[data[,"fare"]=="?"]
data[,"fare"]
,]
data[data[,"fare"]=="?",]
data$fare
head(data$ticket)
head(data$fare)
data$ticket[800:900,]
data$ticket[c(800:900),]
c(800:900)
data$ticket[c(800:900)]
data[data[,"fare"]=="?",]
data$fare[c(800:900)]
data$ticket[c(850:900)]
data$fare[c(850:900)]
data[data[,"fare"]=="?",]
data$ticket[856]
sum(data$ticket == 475)
sum(data$ticket == 189)
data$fare
levels(data$fare) = 1:251
str(data)
is.na(data)
sum(is.na(data))
sum(data[,"age"]==NA)
data[,"age"]
sum(data[,"age"]=NA)
sum(data[,"age"]=="NA")
sum(data[,"age"]==NULL)
sum(data[,"age"]==NA)
data[,"age"]==NA
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
# data = read.csv("C:/Users/HSMOON/Desktop/seminar/analysis/Titanic/kaggle data/train.csv",header=T)
dim(data); names(data); summary(data); str(data)
# install.packages("data.table")
library(data.table)
data.table(data)
## missing data
mis.mat = NULL
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
dim(mis.mat); sum(data=="?")
## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
dim(mdata)
mat = cbind(as.numeric(data[data[,"age"]!="?","age"]),as.factor(data[data[,"age"]!="?","sex"]),
as.factor(data[data[,"age"]!="?","pclass"]))
str(mat)
nmat = cbind(as.numeric(data[data[,"age"]=="?","age"]),data[data[,"age"]=="?","sex"],
data[data[,"age"]=="?","pclass"])
mat[,2]
names(data)
cbind(data$name,data$sibsp,data$parch)
data$name
## data cleansing
dim(data)
str(data)
data$ticket = as.factor(data$ticket)
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
# data = read.csv("C:/Users/HSMOON/Desktop/seminar/analysis/Titanic/kaggle data/train.csv",header=T)
dim(data); names(data); summary(data); str(data)
# install.packages("data.table")
library(data.table)
data.table(data)
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
## missing data
mis.mat = NULL
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
dim(mis.mat); sum(data=="?")
mis.mat
mat[,2]
## data cleansing
dim(data)
str(data)
data$ticket = as.factor(data$ticket)
levels(data$ticket) = c(1:703)
data$pclass = as.factor(data$pclass)
data$sex = as.factor(data$sex)
levels(data$sex) = 1:2
data$age = as.numeric(data$age)
data$sibsp = as.factor(data$sibsp)
data$parch = as.factor(data$parch)
data$fare = as.factor(data$fare)
data[data[,"fare"]=="?",]
data$ticket[c(850:900)]
data$ticket[856] ## 475
sum(data$ticket == 856)
levels(data$fare) = 1:251
str(data)
sum(is.na(data))
data$age
data$age==NA
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
# data = read.csv("C:/Users/HSMOON/Desktop/seminar/analysis/Titanic/kaggle data/train.csv",header=T)
dim(data); names(data); summary(data); str(data)
# install.packages("data.table")
library(data.table)
data.table(data)
## missing data
mis.mat = NULL
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
dim(mis.mat);
## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
dim(mdata)
mat = cbind(as.numeric(data[data[,"age"]!="?","age"]),as.factor(data[data[,"age"]!="?","sex"]),
as.factor(data[data[,"age"]!="?","pclass"]))
str(mat)
nmat = cbind(as.numeric(data[data[,"age"]=="?","age"]),data[data[,"age"]=="?","sex"],
data[data[,"age"]=="?","pclass"])
names(data)
cbind(data$name,data$sibsp,data$parch)
data$name
## data cleansing
dim(data)
str(data)
data$ticket = as.factor(data$ticket)
levels(data$ticket) = c(1:703)
data$pclass = as.factor(data$pclass)
data$sex = as.factor(data$sex)
levels(data$sex) = 1:2
data$age = as.numeric(data$age)
data$sibsp = as.factor(data$sibsp)
data$parch = as.factor(data$parch)
data$fare = as.factor(data$fare)
data[data[,"fare"]=="?",]
data$ticket[c(850:900)]
data$ticket[856] ## 475
sum(data$ticket == 856)
levels(data$fare) = 1:251
str(data)
sum(is.na(data))
is.NA(data$age)
is.na(data$age)
sum(is.na(data$age))
## train / test data for 'age' variable
train = data[is.na(data$age),]
train
## train / test data for 'age' variable
train = data[is.na(data$age)==F,]
test = data[is.na(data$age)==T,]
train
test = data[is.na(data$age)==T,]
test
dim(train); dim(test)
train_age = train$age
test_age = test$age
test_age
dim(train)
n = dim(train)[1]
idx = sample(1:n,size=0.7*n,replace=T)
idx = sample(1:n,size=0.7*n,replace=T)test = data[is.na(data$age)==T,]
idx = sample(1:n,size=0.7*n,replace=T)
idx
length(idx)
tmat = train[idx,]; nmat = train[-idx,]
tmat_age = train[idx,"age"]; nmat_age = train[-idx,"age"]
train = data[is.na(data$age)==F,]
n = dim(train)[1]
idx = sample(1:n,size=0.7*n,replace=T)
tmat = train[idx,]; nmat = train[-idx,]
tmat_age = train[idx,"age"]; nmat_age = train[-idx,"age"]
str(data)
data$cabin
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
# data = read.csv("C:/Users/HSMOON/Desktop/seminar/analysis/Titanic/kaggle data/train.csv",header=T)
dim(data); names(data); summary(data); str(data)
# install.packages("data.table")
library(data.table)
data.table(data)
## missing data
mis.mat = NULL
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
dim(mis.mat);
## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
dim(mdata)
mat = cbind(as.numeric(data[data[,"age"]!="?","age"]),as.factor(data[data[,"age"]!="?","sex"]),
as.factor(data[data[,"age"]!="?","pclass"]))
str(mat)
nmat = cbind(as.numeric(data[data[,"age"]=="?","age"]),data[data[,"age"]=="?","sex"],
data[data[,"age"]=="?","pclass"])
names(data)
cbind(data$name,data$sibsp,data$parch)
data$name
## data cleansing
dim(data)
str(data)
data$ticket = as.factor(data$ticket)
levels(data$ticket) = c(1:703)
data$pclass = as.factor(data$pclass)
data$sex = as.factor(data$sex)
levels(data$sex) = 1:2
data$age = as.numeric(data$age)
data$sibsp = as.factor(data$sibsp)
data$parch = as.factor(data$parch)
data$fare = as.numeric(data$fare)
data$fare
sort(data$fare)
length(sort(data$fare))
length(data$fare)
length(data$fare)
(data$fare)
sum(data$ticket == 856)
data$ticket
cbind(data$ticket,data$fare)
cbind(data$ticket,data$fare)
tf.mat = cbind(data$ticket,data$fare)
tf.mat[tf.mat[,1]==1:100,]
1:100
tf.mat[,1]
tf.mat[,1]==1:100
tf.mat[,1]==c(1:100)
tf.mat[tf.mat[,1]==c(1:100),]
tf.mat[tf.mat[,1]==c(101:200),]
tf.mat[tf.mat[,1]%in%c(1:100),]
tf.mat[tf.mat[,1]%in%c(1:100),]
tf.mat[tf.mat[,1]%in%c(101:200),]
tf.mat[tf.mat[,1]%in%c(201:300),]
tf.mat[tf.mat[,1]%in%c(301:400),]
tf.mat[tf.mat[,1]%in%c(401:500),]
tf.mat[tf.mat[,1]%in%c(501:600),]
tf.mat[tf.mat[,1]%in%c(401:500),]
tf.mat = cbind(data$name,data$ticket,data$fare)
tf.mat[tf.mat[,1]%in%c(401:500),]
tf.mat = cbind(data$ticket,data$fare,data$name)
tf.mat[tf.mat[,1]%in%c(401:500),]
tf.mat = cbind(data$ticket,data$fare,data$name,data$pclass)
tf.mat[tf.mat[,1]%in%c(401:500),]
tf.mat
tf.mat[tf.mat[,1]%in%c(401:500),]
[tf.mat[,1]%in%c(501:600),]
tf.mat[tf.mat[,1]%in%c(501:600),]
tf.mat = cbind(data$ticket,data$fare,data$name,data$pclass,data$sibsp,data$parch)
tf.mat
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch)
tf.mat
names(tf.mat) = c("ticket","fare","pclass","sibsp","parch")
tf.mat
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch)
tf.mat
colnames(tf.mat) = c("ticket","fare","pclass","sibsp","parch")
tf.mat
tf.mat[,"pclass"==3|"sibsp"==1|"parch"==1]
tf.mat[,3]==3&tf.mat[,4]==1&tf.mat[,5]==1
tf.mat[tf.mat[,3]==3&tf.mat[,4]==1&tf.mat[,5]==1,]
kk = tf.mat[tf.mat[,3]==3&tf.mat[,4]==1&tf.mat[,5]==1,]
kk[,2]=="?"
is.na(kk[,2])
kk[is.na(kk[,2]),]
mean(kk[,2])
mean(kk[,2],na.rm=T)
kk[is.na(kk[,2]),2]=mean(kk[,2],na.rm=T)
names(data)
data$embarked
data[is.na(data[,2]),"fare"]
is.na(data[,"fare"])
data[is.na(data[,"fare"]),]
data[is.na(data[,"fare"]),"fare"]
data[is.na(data[,"fare"]),"fare"]
data[is.na(data[,"fare"]),"fare"]=mean(kk[,2],na.rm=T)
data$embarked = as.factor(data$embarked)
str(data)
data$embarked
levels(data$embarked) = 1:3
levels(data$embarked) = c(1:3)
data[is.na(data[,"embarked"])]
data[is.na(data[,"embarked"]),]
data[data[,"embarked"]=="?",]
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
tf.mat
colnames(tf.mat) = c("ticket","fare","pclass","sibsp","parch"."embarked")
colnames(tf.mat) = c("ticket","fare","pclass","sibsp","parch","embarked")
tf.mat
tf.mat[,6]=="?"
tf.mat[tf.mat[,6]=="?",]
tf.mat[is.na(tf.mat[,6]),]
(tf.mat[,6])
data[data[,"embarked"]=="?",]
kk = tf.mat[tf.mat[,3]==3&tf.mat[,4]==0&tf.mat[,5]==0,]
kk
kk = tf.mat[tf.mat[,3]==3&tf.mat[,4]==1&tf.mat[,5]==1,]
kk
data[data[,"embarked"]=="?",]
data$sibsp
data$parch==0
kk = tf.mat[tf.mat[,4]==0&tf.mat[,5]==0,]
kk
kk = tf.mat[tf.mat[,4]==0,]
kk
data$ticket
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
colnames(tf.mat) = c("ticket","fare","pclass","sibsp","parch","embarked")
tf.mat[is.na(tf.mat[,6]),]
kk = tf.mat[tf.mat[,4]==0,]
kk
tf.mat
kk = tf.mat[tf.mat[,"sibsp"]==0,]
kk
tf.mat[,"sibsp"]==0
data$sibsp==0
data[data$sibsp==0,]
tf.mat[,4]==0
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
data$sibsp == tf.mat[,4]
== tf.mat[,4]
data$sibsp
tf.mat[,4]
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
# data = read.csv("C:/Users/HSMOON/Desktop/seminar/analysis/Titanic/kaggle data/train.csv",header=T)
dim(data); names(data); summary(data); str(data)
# install.packages("data.table")
library(data.table)
data.table(data)
## missing data
mis.mat = NULL
for(j in 1:dim(data)[2]){ if(j==11) break; mis.mat = rbind(mis.mat,data[data[,j]=="?",]) }
dim(mis.mat);
names(data)
cbind(data$name,data$sibsp,data$parch)
data$name
## data cleansing
dim(data)
str(data)
data$ticket = as.factor(data$ticket)
levels(data$ticket) = c(1:703)
data$pclass = as.factor(data$pclass)
## data cleansing
dim(data)
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
# data = read.csv("C:/Users/HSMOON/Desktop/seminar/analysis/Titanic/kaggle data/train.csv",header=T)
dim(data); names(data); summary(data); str(data)
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titan.tr.csv",header=T)
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titanic/titan.tr.csv",header=T)
rm(list=ls())
data = read.csv("C:/Users/HSMOON/Desktop/mygit/data-mining/titanic/titan.tr.csv",header=T)
## imputation
# "age" : mean
mdata =  data[data[,"age"]=="?",]
dim(mdata)
names(data)
## data cleansing
dim(data)
str(data)
data$ticket = as.factor(data$ticket)
levels(data$ticket) = c(1:703)
data$pclass = as.factor(data$pclass)
data$sex = as.factor(data$sex)
levels(data$sex) = 1:2
data$age = as.numeric(data$age)
data$sibsp = as.factor(data$sibsp)
data$sibsp
data$parch = as.factor(data$parch)
data$fare = as.numeric(data$fare)
str(data)
data$ticket
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
colnames(tf.mat) = c("ticket","fare","pclass","sibsp","parch","embarked")
data$sibsp == tf.mat[,4]
data$sibsp
tf.mat[,4]
tf.mat[,"sibsp"]
tf.mat
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
data$embarked = as.factor(data$embarked)
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
tf.mat
data[data$sibsp==0,]
tf.mat[,4]
data$sibsp == tf.mat[,4]
data$sibsp
tf.mat = cbind(data$ticket,data$fare,data$pclass,data$sibsp,data$parch,data$embarked)
tf.mat
tf.mat[,4]
data$sibsp
tf.mat[,4]
length(tf.mat[,4])
length(data$si)
length(data$sibsp)
tf.mat[,4]
tf.mat
is.factor(tf.mat[,4])
str(data)
tf.mat = cbind(as.factor(data$ticket),as.numeric(data$fare),as.factor(data$pclass),as.factor(data$sibsp),
as.factor(data$parch),as.factor(data$embarked))
is.factor(tf.mat[,4])
tf.mat = cbind(as.factor(data$ticket),as.numeric(data$fare),as.factor(data$pclass),as.factor(data$sibsp),
as.factor(data$parch),as.factor(data$embarked))
is.factor(tf.mat[,4])
length(tf.mat[,4])
length(data$sibsp)
tf.mat[,4]
data$sibsp
data$sibsp
cbind(data$sibsp)
m=cbind(data$sibsp)
data$sibsp
m=cbind(data$sibsp)
m[,1]
tf.mat = cbind(as.factor(data$ticket),as.numeric(data$fare),as.factor(data$pclass),as.factor(data$sibsp),
as.factor(data$parch),as.factor(data$embarked))
data$sibsp
m=cbind(data$sibsp)
m[,1]
data$sibsp
m=cbind(data$sibsp)
m[,1]
data$sibsp
m=cbind(data$sibsp)
data$sibsp==m
data$sibsp
m
m=cbind(data$sibsp,deparse.level = 0)
m
data$sibsp
m=cbind(data$sibsp,deparse.level = 0)
m
m=cbind(data$sibsp,factor.exclude=T)
m
m=cbind(data$sibsp, stringsAsFactors = default.stringsAsFactors())
m
